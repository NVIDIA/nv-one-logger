variables:
  E2E_CI: 1
  KUBERNETES_MEMORY_LIMIT: 2048Mi
  KUBERNETES_CPU_LIMIT: 1000m

stages:
  - test
  - build_deploy

wandb-build-prod-job:
  stage: build_deploy
  needs: [wandb-unit-tests] # DAG dependency allow stage parallism to speed up pipeline
  when: manual
  only: 
    - merged
    - main
  image: 
    name: python:3.9
  before_script:
    - echo "installing poetry."
    - pip install poetry==1.8.5 wheel
    - echo "installing jq."
    - apt-get -qq update
    - apt-get install -y jq
    - which jq
    - cd nv_one_logger/one_logger_wandb
    - poetry source add pypi
  script:
    - echo "setting Git token and Repo path"
    - export GH_TOKEN=$CI_REGISTRY_USER:$CI_JOB_TOKEN
    - export E2E_PYTHON_REPO="https://sc-hw-artf.nvidia.com/artifactory/api/pypi/hwinf-mlwfo-pypi/"
    - export E2E_PYTHON_REPO_USER=$ARTIFACTORY_USERNAME
    - export E2E_PYTHON_REPO_PASSWORD=$ARTIFACTORY_PROD_TOKEN
    - echo "making release"
    - git checkout -b $CI_COMMIT_BRANCH
    - make ci_tag
    - echo "making publish"
    - make publish
  tags:
    - hwinf-mlwfo  # Use runners with this tag

wandb-build-staging-job:
  stage: build_deploy
  needs: [wandb-unit-tests] # DAG dependency allow stage parallism to speed up pipeline
  only: 
    - merged
    - develop
  image: 
    name: python:3.9
  before_script:
    - echo "installing poetry."
    - pip install poetry==1.8.5 wheel
    - echo "installing jq."
    - apt-get -qq update
    - apt-get install -y jq
    - which jq
    - cd nv_one_logger/one_logger_wandb
    - poetry source add pypi
  script:
    - echo "setting Git token and Repo path"
    - export GH_TOKEN=$CI_REGISTRY_USER:$CI_JOB_TOKEN
    - export E2E_PYTHON_REPO="https://sc-hw-artf.nvidia.com/artifactory/api/pypi/hwinf-mlwfo-staging-pypi/"
    - export E2E_PYTHON_REPO_USER=$ARTIFACTORY_USERNAME
    - export E2E_PYTHON_REPO_PASSWORD=$ARTIFACTORY_STAGING_TOKEN
    - echo "making release"
    - git checkout -b $CI_COMMIT_BRANCH
    - make ci_tag
    - echo "making publish"
    - make publish
  tags:
    - hwinf-mlwfo  # Use runners with this tag

wandb-unit-tests:
  stage: test
  coverage: '/TOTAL.*\s+(\d+%)$/'
  image: 
    name: python:3.9
  before_script:
  script:
    - echo "installing poetry."
    - pip install poetry==1.8.5 wheel poetry-plugin-export
    - cd nv_one_logger/one_logger_wandb
    - echo "checking lint/format."
    - make check
    - echo "running tests..."
    - make test
  tags:
    - hwinf-mlwfo  # Use runners with this tag
